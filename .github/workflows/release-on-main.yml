name: Release on main

on:
  push:
    branches: [ "main" ]

jobs:
  build-win:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Bump version (patch) & tag
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          npm version patch -m "ci(release): %s [skip ci]"
          git push --follow-tags

      - name: Read app version
        id: pkgver
        shell: bash
        run: echo "ver=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Install deps
        run: npm ci

      - name: Build app (webpack -> release/app)
        run: npm run build

      - name: Validate PFX password
        shell: pwsh
        run: |
          $bytes = [Convert]::FromBase64String("${{ secrets.CSC_LINK }}")
          $pfx   = "$env:RUNNER_TEMP\cs.pfx"
          [IO.File]::WriteAllBytes($pfx, $bytes)
          certutil -p "${{ secrets.CSC_KEY_PASSWORD }}" -dump $pfx

      - name: Build & sign (Windows NSIS) without publishing
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: npx electron-builder --win nsis --publish always -c.extraMetadata.version=${{ steps.pkgver.outputs.ver }}
